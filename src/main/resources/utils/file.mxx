#ifndef FILE_UTILS_H
#define FILE_UTILS_H

#define FILE_OP_SUCCESS 0
#define FILE_EXISTS 1
#define FILE_DOESNT_EXIST 2
#define FILE_NO_PERMISSION 3
#define FILE_OP_FAILED 4

public native function native_fileread(ptr char out, ulong size, string name) : int
public native function native_filewrite(ptr char out, ulong size, string name, boolean append) : int
public native function native_filedelete(string name) : int
public native function native_fileexists(string name) : int
public native function native_filecreate(string name) : int
public native function native_filesize(string name) : long

class File{
    private String fileName

    /** constructor **/
    public function File(String name) : void
    {
        this.fileName = name
    }

    /** destructor **/
    public function delete() : void
    {
    }

    /** returns: true if file exists **/
    public function exists() : bool
    {
        return native_fileexists(fileName) == FILE_OP_SUCCESS
    }

    /** returns: true if file was deleted successfully **/
    public function deleteFile() : bool
    {
        return native_filedelete(fileName) == FILE_OP_SUCCESS
    }

    /** returns: true if file was created successfully **/
    public function create() : bool
    {
        return native_filecreate(fileName) == FILE_OP_SUCCESS
    }

    /** returns: file size **/
    public function size() : long
    {
        return native_filesize(fileName)
    }

    public function read(ptr char data, ulong size) : int
    {
        return native_fileread(data, size, fileName)
    }

    public function write(ptr char data, ulong size, boolean append) : int
    {
        return native_filewrite(data, size, fileName, append)
    }
}

#endif